{"ast":null,"code":"import React from 'react';\nimport './cards.css';\nconst slideContainer = document.querySelector('.container');\nconst slide = document.querySelector('.slides');\nconst nextBtn = document.getElementById('next-btn');\nconst prevBtn = document.getElementById('prev-btn');\nconst interval = 3000;\nlet slides = document.querySelectorAll('.slide');\nlet index = 1;\nlet slideId;\nconst firstClone = slides[0].cloneNode(true);\nconst lastClone = slides[slides.length - 1].cloneNode(true);\nfirstClone.id = 'first-clone';\nlastClone.id = 'last-clone';\nslide.append(firstClone);\nslide.prepend(lastClone);\nconst slideWidth = slides[index].clientWidth;\nslide.style.transform = `translateX(${-slideWidth * index}px)`;\nconsole.log(slides);\n\nconst startSlide = () => {\n  slideId = setInterval(() => {\n    moveToNextSlide();\n  }, interval);\n};\n\nconst getSlides = () => document.querySelectorAll('.slide');\n\nslide.addEventListener('transitionend', () => {\n  slides = getSlides();\n\n  if (slides[index].id === firstClone.id) {\n    slide.style.transition = 'none';\n    index = 1;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n\n  if (slides[index].id === lastClone.id) {\n    slide.style.transition = 'none';\n    index = slides.length - 2;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n});\n\nconst moveToNextSlide = () => {\n  slides = getSlides();\n  if (index >= slides.length - 1) return;\n  index++;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n};\n\nconst moveToPreviousSlide = () => {\n  if (index <= 0) return;\n  index--;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n};\n\nslideContainer.addEventListener('mouseenter', () => {\n  clearInterval(slideId);\n});\nslideContainer.addEventListener('mouseleave', startSlide);\nnextBtn.addEventListener('click', moveToNextSlide);\nprevBtn.addEventListener('click', moveToPreviousSlide);\nstartSlide();","map":{"version":3,"sources":["/Users/nikhilparekh/Developer/Amazon-Clone/react-challenge-amazon-clone/src/cards.js"],"names":["React","slideContainer","document","querySelector","slide","nextBtn","getElementById","prevBtn","interval","slides","querySelectorAll","index","slideId","firstClone","cloneNode","lastClone","length","id","append","prepend","slideWidth","clientWidth","style","transform","console","log","startSlide","setInterval","moveToNextSlide","getSlides","addEventListener","transition","moveToPreviousSlide","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './cards.css'\n\nconst slideContainer = document.querySelector('.container');\nconst slide = document.querySelector('.slides');\nconst nextBtn = document.getElementById('next-btn');\nconst prevBtn = document.getElementById('prev-btn');\nconst interval = 3000;\n\nlet slides = document.querySelectorAll('.slide');\nlet index = 1;\nlet slideId;\n\nconst firstClone = slides[0].cloneNode(true);\nconst lastClone = slides[slides.length - 1].cloneNode(true);\n\nfirstClone.id = 'first-clone';\nlastClone.id = 'last-clone';\n\nslide.append(firstClone);\nslide.prepend(lastClone);\n\nconst slideWidth = slides[index].clientWidth;\n\nslide.style.transform = `translateX(${-slideWidth * index}px)`;\n\nconsole.log(slides);\n\nconst startSlide = () => {\n  slideId = setInterval(() => {\n    moveToNextSlide();\n  }, interval);\n};\n\nconst getSlides = () => document.querySelectorAll('.slide');\n\nslide.addEventListener('transitionend', () => {\n  slides = getSlides();\n  if (slides[index].id === firstClone.id) {\n    slide.style.transition = 'none';\n    index = 1;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n\n  if (slides[index].id === lastClone.id) {\n    slide.style.transition = 'none';\n    index = slides.length - 2;\n    slide.style.transform = `translateX(${-slideWidth * index}px)`;\n  }\n});\n\nconst moveToNextSlide = () => {\n  slides = getSlides();\n  if (index >= slides.length - 1) return;\n  index++;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n};\n\nconst moveToPreviousSlide = () => {\n  if (index <= 0) return;\n  index--;\n  slide.style.transition = '.7s ease-out';\n  slide.style.transform = `translateX(${-slideWidth * index}px)`;\n};\n\nslideContainer.addEventListener('mouseenter', () => {\n  clearInterval(slideId);\n});\n\nslideContainer.addEventListener('mouseleave', startSlide);\nnextBtn.addEventListener('click', moveToNextSlide);\nprevBtn.addEventListener('click', moveToPreviousSlide);\n\nstartSlide();"]},"metadata":{},"sourceType":"module"}